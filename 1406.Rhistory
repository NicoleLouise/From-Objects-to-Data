data <- readRDS("E:\CIW JAAR 3 DIGITAL HUMANITIES\From Objects To Data\Data")
data <- readRDS("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data")
data <- readRDS("E://CIW JAAR 3 DIGITAL HUMANITIES//From Objects To Data//Data")
data <- readRDS("E:\CIW JAAR 3 DIGITAL HUMANITIES\From Objects To Data\Data"
data <- readRDS("E:\CIW JAAR 3 DIGITAL HUMANITIES\From Objects To Data\Data")
data <- readRDS("E:\IW JAAR 3 DIGITAL HUMANITIES\From Objects To Data\Data")
data <- readRDS("E:\dh CIW JAAR 3 DIGITAL HUMANITIES\From Objects To Data\Data")
data <- readRDS("E:\'CIW JAAR 3 DIGITAL HUMANITIES'\From Objects To Data\Data")
data <- readRDS("E:\'CIW JAAR 3 DIGITAL HUMANITIES'\'From Objects To Data'\'Data'")
data <- readRDS("E:\'CIW JAAR 3 DIGITAL HUMANITIES'\'From Objects To Data'\'Data'\data.rds")
data <- readRDS("E:\'CIW JAAR 3 DIGITAL HUMANITIES'\'From Objects To Data'\'Data'\'data.rds'")
data <- readRDS("E:\'CIW JAAR 3 DIGITAL HUMANITIES'\'From Objects To Data'\'Data'\'data.rds'")
data <- readRDS("E:\CIW JAAR 3 DIGITAL HUMANITIES\From Objects To Data\Data\data.rds")
data <- readRDS("C:\Users\Nicole Louise\Desktop")
readRDS("E:\CIW JAAR 3 DIGITAL HUMANITIES\From Objects To Data\Data")
readRDS("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data")
readRDS("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/data.rds")
readabilityoutput <- readRDS("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/data.rds")
graphics::abline()
?graphics
library(help="graphics")
NewBook1 <- read.csv("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/New Book1.csv")
data = read.csv("New Book1.csv", header = TRUE)
pwd
setwd ("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data")
NewBook1 <- read.csv("New Book1.csv",
header = FALSE)
View(NewBook1)
View(NewBook1)
View(readabilityoutput)
?barplot
install.packages(effsize-package)
?cohen.d
??cohen.d
?effsize
??effsize
library(effsize)
library(lsr)
library(pwr)
install.packages(pwr)
install.packages(pwr-package)
install.packages("pwr")
install.packages("lsr")
install.packages("effsize")
?cohen.d
library(effsize)
?cohen.d
cohen.d()
?cor
flesch_kincaid
library(pwr)
cor(data$'Overall rating %', as.numeric(data$'ARI'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'ARI'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Mean Cloze'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$''))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'D-C raw value'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Dale-Chall age'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Unfamiliar words'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Bormuth'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Overall success %'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Number of editions %'))
New Book1
"New Book1"
NewBook1
?open
NewBook1B <- read.csv("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/New Book1 B.csv")
data = read.csv("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/New Book1 B.csv")
setwd ("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data")
> NewBook1 <- read.csv("New Book1.csv",
+                header = FALSE)
setwd ("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data")
NewBook1B <- read.csv("New Book1 B.csv")
NewBook1B <- read.csv("New Book1 B.csv", header = FALSE)
View(NewBook1B)
View(readabilityoutput)
library(lsr)
View(readabilityoutput)
aad("overall rating", na.rm=FALSE)
class ("overall rating")
"overall rating"
readabilityoutput$"overall rating" <- as.numeric(readabilityoutput$"overall rating")
"overall rating"
class ("overall rating")
overallratingvector <- readabilityoutput$"overall rating"
overallratingvector
aad(overallratingvector, na.rm=FALSE)
ciMean(overallratingvector, conf = 0.95, na.rm = FALSE)
?cohensD
readabilityoutput$`number of ratings` <- as.numeric(readabilityoutput$`number of ratings`)
numberofratingsvector <- readabilityoutput$`number of ratings`
numberofratingsvector
aad(numberofratingsvector, na.rm=FALSE)
mean(numberofratingsvector)
mean(overallratingvector)
readabilityoutput$`Overall success %` <- as.numeric(readabilityoutput$`Overall success %`)
overallsuccess <- readabilityoutput$`Overall success %`
overallsuccess
aad(overallsuccess, na.rm=FALSE)
mean (overallsuccess)
readabilityoutput$`Number of editions` <- as.numeric(readabilityoutput$`Number of editions`)
numberofeditionsvector<- readabilityoutput$`Number of editions`
numberofeditionsvector
aad(numberofeditionsvector, na.rm=FALSE)
mean(numberofeditionsvector)
readabilityoutput$`Overall rating %` <- as.numeric(readabilityoutput$`Overall rating %`)
overallratingpercvect <- readabilityoutput$`Overall rating %`
overallratingpercvect
aad(overallratingpercvect, na.rm=FALSE)
mean(overallratingpercvect)
readabilityoutput$Bormuth <- as.numeric(readabilityoutput$Bormuth)
bormuthvector <- readabilityoutput$Bormuth
bormuthvector
mean(bormuthvector)
aad(bormuthvector, na.rm=FALSE)
class(bormuthvector)
class(readabilityoutput)
readabilityoutput
readabilityoutput[,13]
readabilityoutput[,12]
readabilityoutput[1:6,12]
readabilityoutput[1:6,12] -> bormuthausten
readabilityoutput[7:21,12] -> bormuthdickens
aad(bormuthausten, na.rm=FALSE)
aad(bormuthdickens, na.rm=FALSE)
mean(bormuthausten)
mean(bormuthdickens)
save.image("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/dataset.RData")
load("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/dataset.RData")
load("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/dataset.RData")
dat<-load("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/dataset.RData")
dat
dat$"bormuthausten"
dat[bormuthausten]
dat[bormuthausten][overallratingvector]
dat[bormuthausten][overallratingvector][overallratingvector]
numberofratingsvector
bormuthausten
dat[bormuthausten]
dat[bormuthausten,0]
dat[bormuthausten][1]
saveRDS(bormuthausten,"bormuthausten.rds")
ba2<-readRDS("bormuthausten.rds")
ba2
savehistory("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/datahistory.Rhistory")
setwd("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data")
savehistory("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/dataset.RData")
bormuthausten
library(lsr)
load("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/dataset.RData")
install.packages(koRpus)
library(lsr)
overallratingvector
overallratingpercvect
overallsuccess
readabilityoutput$ARI <- as.numeric(readabilityoutput$ARI)
arivector <- readabilityoutput$ARI
arivector
cohen.d(overallsuccess, arivector, pooled=TRUE, paired=FALSE, na.rm=FALSE, hedges.correction=FALSE, conf.level=0.95, noncentral=FALSE)
library(lsr)
cohen.d(overallsuccess, arivector, pooled=TRUE, paired=FALSE, na.rm=FALSE, hedges.correction=FALSE, conf.level=0.95, noncentral=FALSE)
install.packages(lsr)
install.packages(lrs)
library(effsize)
cohen.d(overallsuccess, arivector, pooled=TRUE, paired=FALSE, na.rm=FALSE, hedges.correction=FALSE, conf.level=0.95, noncentral=FALSE)
getwd()
savehistory(file = ".Rhistory")
save.image(file = "1536.RData",version = NULL,ascii = FALSE,compress = !ascii,safe = TRUE)
save.image(file = "1536.RData")
load(file=".Rhistory")
cor(data$'Overall rating %', as.numeric(data$'ARI'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'ARI'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Mean Cloze'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$''))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'D-C raw value'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Dale-Chall age'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Unfamiliar words'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Bormuth'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Overall success %'))
cor(readabilityoutput$'Overall rating %', as.numeric(readabilityoutput$'Number of editions %'))
?cov
sd(overallsuccess)
readabilityoutput$`D-C raw value` <-  as.numeric(readabilityoutput$`D-C raw value`)
readabilityoutput$`D-C raw value` -> dcrawvector
dcrawvector
arivector
dcraw_ari_vector <- (dcrawvector+arivector)/2
dcraw_ari_vector
rm(dcraw_ari_vector)
attach(readabilityoutput)
plot(wt, mpg, main="Popularity vs ARI-results",
xlab="arivector", ylab="overallsuccess", pch=19)
?wt
??wt
?plot
plot(x = "arivector",y = "overallsuccess",type = "b",main = "Popularity vs ARI-results",axes = TRUE)
plot(x = "arivector",y = "overallsuccess",type = "b",main = "Popularity vs ARI-results",axes = TRUE, xlim = NULL)
plot(readabilityoutput$`Overall success %`, readabilityoutput$ARI)
plot(readabilityoutput$ARI, readabilityoutput$'Overall success %')
plot(readabilityoutput$ARI, readabilityoutput$'Overall success %', xlab= "Readability ARI", ylab= "Popularity", xlim=c(2,8), ylim=c(30,100), main="Popularity vs Readability ARI-results", frame.plot = FALSE)
plot(readabilityoutput$ARI, readabilityoutput$'Overall success %', xlab= "Readability ARI", ylab= "Popularity", xlim=c(2,8), ylim=c(20,100), main="Popularity vs Readability ARI-results", frame.plot = FALSE)
plot(readabilityoutput$ARI, readabilityoutput$'Overall success %', xlab= "Readability ARI", ylab= "Popularity", xlim=c(2,8), ylim=c(20,100), main="Popularity vs Readability ARI", frame.plot = FALSE)
plot(readabilityoutput$`D-C raw value`, readabilityoutput$'Overall success %', xlab= "Readability Dale-Chall", ylab= "Popularity", xlim=c(20,25), ylim=c(20,100), main="Popularity vs Readability Dale-Chall", frame.plot = FALSE)
plot(readabilityoutput$`D-C raw value`, readabilityoutput$'Overall success %', xlab= "Readability Dale-Chall", ylab= "Popularity", xlim=c(20,27), ylim=c(20,100), main="Popularity vs Readability Dale-Chall", frame.plot = FALSE)
plot(readabilityoutput$`D-C raw value`, readabilityoutput$'Overall success %', xlab= "Readability Dale-Chall", ylab= "Popularity", xlim=c(20,26), ylim=c(20,100), main="Popularity vs Readability Dale-Chall", frame.plot = FALSE)
mean(dcrawvector)
mean(arivector)
summary(dcrawvector)
summary(arivector)
range(dcrawvector)
range(arivector)
summary(overallsuccess)
summary(dcrawausten)
readabilityoutput[1:6, 12]
readabilityoutput[1:6, 13]
readabilityoutput[1:6, 13] -> dcrawausten
readabilityoutput[7:21, 13] -> dcrawdickens
summary(dcrawausten)
summary(dcrawdickens)
readabilityoutput[1:6, 9]
readabilityoutput[1:6, 8]
readabilityoutput[1:6, 8] -> ariausten
readabilityoutput[7:21, 8] -> aridickens
summary(ariausten)
summary(aridickens)
savehistory(file = ".Rhistory")
save.image(file= 1659.RData)
save.image(file= "1659.RData")
q()
class(readabilityoutput)
readabilityoutput[1:6, 18]
readabilityoutput[1:6, 18] -> overallsuccessausten
readabilityoutput[7:21, 18] -> overallsuccessdickens
summary(overallsuccessausten)
summary(overallsuccessdickens)
summary(overallsuccess)
readabilityoutput$author <- as.numeric(readabilityoutput$author)
t.test(overallsuccessausten,overallsuccessdickens,paired=TRUE)
t.test(overallsuccessausten, overallsuccessdickens, var.equal=FALSE, paired=FALSE)
sd(overall)
sd(overallsuccessausten)
sd(overallsuccessdickens)
library(lsr)
cohen.d(overallsuccessausten, overallsuccessdickens, pooled=TRUE, paired=FALSE, na.rm=FALSE, hedges.correction=FALSE, conf.level=0.95, noncentral=FALSE)
library(effsize)
cohen.d(overallsuccessausten, overallsuccessdickens, pooled=TRUE, paired=FALSE, na.rm=FALSE, hedges.correction=FALSE, conf.level=0.95, noncentral=FALSE)
summary(overallsuccessausten)
summary(overallsuccessdickens)
numberofeditionsvector
readabilityoutput[1:6;4]
readabilityoutput[1:6,4]
readabilityoutput[1:6,4] -> numberofeditions_austen
readabilityoutput[7:21,4] -> numberofeditions_dickens
t.test(numberofeditions_austen, numberofeditions_dickens, var.equal = FALSE, paired=FALSE)
summary(numberofeditions_austen)
summary(numberofeditions_dickens)
library(effsize)
cohen.d(numberofeditions_austen, numberofeditions_dickens, pooled=TRUE, paired=FALSE, na.rm=FALSE, hedges.correction=FALSE, conf.level=0.95, noncentral=FALSE)
savehistory(file = ".Rhistory")
save.image(file = "1914.RData")
counts <- table(readabilityoutput$`Overall success %`, readabilityoutput$`Number of editions %`)
barplot(counts, main="Overall success and number of reviews per author",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
install.packages(lattice)
install.packages(ggplot2)
library(ggplot2)
bar <- function(dv, factors, dataframe, percentage=FALSE, errbar=!percentage, half.errbar=TRUE, conf.level=.95,
xlab=NULL, ylab=NULL, main=NULL, names.arg=NULL, bar.col="black", whisker=.015,args.errbar=NULL,
legend=TRUE, legend.text=NULL, args.legend=NULL,legend.border=FALSE, box=TRUE, args.yaxis=NULL,
mar=c(5,4,3,2),...){
axes=!percentage
dv.name<-substitute(dv)
if(length(dv.name)>1) stop("'dv' only takes one variable")
dv.name<-as.character(dv.name)
dv<-dataframe[[dv.name]]
fnames<-substitute(factors)
if(length(fnames)==1){
factors<-as.character(fnames)
nf<-1
}else{
factors<-as.character(fnames[-1L])
nf<-length(factors)
}
if(nf>2) stop("This function accepts no more than 2 factors \n",
"\t-i.e., it only plots one-way or two-way designs.")
if(percentage & errbar){
warning("percentage=TRUE; error bars were not plotted")
errbar<-FALSE
}
if(!percentage) xbars<-tapply(dv, dataframe[,factors], mean, na.rm=TRUE)
else {
xbars<-tapply(dv, list(interaction(dataframe[,factors], lex.order=TRUE)), mean, na.rm=TRUE)
if(sum(na.omit(dv)!=0&na.omit(dv)!=1)>0)
stop("Data points in 'dv' need to be 0 or 1 in order to set 'percentage' to TRUE")
xbars<-rbind(xbars, 1-xbars)*100
}
if(errbar){
se<-tapply(dv, dataframe[,factors], sd, na.rm=TRUE)/sqrt(tapply(dv, dataframe[,factors], length))
conf.level=1-(1-conf.level)/2
lo.bar<-xbars-se*qnorm(conf.level)
hi.bar<-xbars+se*qnorm(conf.level)
}
extras<-list(...)
if(legend & !percentage){
if(is.null(legend.text))
legend.text<-sort(unique(dataframe[[factors[1]]]))
args.legend.temp<-list(x="topright", bty=if(!legend.border)"n" else "o",
inset=c(0,0))
if(is.list(args.legend))
args.legend<-modifyList(args.legend.temp, args.legend)
else
args.legend<-args.legend.temp
} else if(legend & percentage){
if(is.null(legend.text))
legend.text<-c("1", "0")
args.legend.temp<-list(x="topright", bty=if(!legend.border)"n" else "o",
inset=c(0,0))
if(is.list(args.legend))
args.legend<-modifyList(args.legend.temp, args.legend)
else
args.legend<-args.legend.temp
} else if(!legend){
args.legend<-NULL
legend.text<-NULL
}
if(errbar && legend && !percentage) ymax<-max(hi.bar)+max(hi.bar)/20
else if(errbar && legend && percentage) ymax<-115
else if(errbar && !legend) ymax <- max(xbars)
else if(!errbar && legend && percentage) ymax<-110
else if(!errbar) ymax<-max(xbars) + max(xbars)/20
if(!percentage){
args.barplot<-list(beside=TRUE, height=xbars, ylim=c(0, ymax), main=main, names.arg=names.arg,
col=hcl(h=seq(0,270, 270/(length(unique(dataframe[[factors[1]]]))))[-length(unique(dataframe[[factors[1]]]))]),
legend.text=legend.text, args.legend=args.legend, xpd=TRUE,
xlab=if(is.null(xlab)) factors[length(factors)] else xlab,
ylab=if(is.null(ylab)) dv.name else ylab, axes=axes)
}else{
args.barplot<-list(beside=TRUE, height=xbars, ylim=c(0, ymax),  main=main, names.arg=names.arg,
col=hcl(h=seq(0,270, 270/(length(unique(dataframe[[factors[1]]]))))[-length(unique(dataframe[[factors[1]]]))]),
legend.text=legend.text, args.legend=args.legend, xpd=TRUE,
xlab=if(is.null(xlab)) " "[length(factors)] else xlab,
ylab=if(is.null(ylab)) "percentage" else ylab, axes=axes)
}
args.barplot<-modifyList(args.barplot, extras)
errbars = function(xvals, cilo, cihi, whisker, nc, args.errbar = NULL, half.errbar=TRUE) {
if(half.errbar){
cilo<-(cihi+cilo)/2
}
fixedArgs.bar = list(matlines, x=list(xvals),
y=lapply(split(as.data.frame(t(do.call("rbind",
list(cihi, cilo)))),1:nc),matrix,
nrow=2, byrow=T))
allArgs.bar = c(fixedArgs.bar, args.errbar)
whisker.len = whisker*(par("usr")[2] - par("usr")[1])/2
whiskers = rbind((xvals - whisker.len)[1,],
(xvals + whisker.len)[1,])
fixedArgs.lo = list(matlines, x=list(whiskers),
y=lapply(split(as.data.frame(t(do.call("rbind",
list(cilo, cilo)))), 1:nc), matrix, nrow=2, byrow=T))
allArgs.bar.lo = c(fixedArgs.lo, args.errbar)
fixedArgs.hi = list(matlines, x=list(whiskers),
y=lapply(split(as.data.frame(t(do.call("rbind",
list(cihi, cihi)))), 1:nc), matrix, nrow=2, byrow=T))
allArgs.bar.hi = c(fixedArgs.hi, args.errbar)
invisible(do.call(mapply, allArgs.bar))
if(!half.errbar) invisible(do.call(mapply, allArgs.bar.lo))
invisible(do.call(mapply, allArgs.bar.hi))
}
par(mar=mar)
errloc<-as.vector(do.call(barplot, args.barplot))
if(errbar){
errloc<-rbind(errloc, errloc)
lo.bar<-matrix(as.vector(lo.bar))
hi.bar<-matrix(as.vector(hi.bar))
args.errbar.temp<-list(col=bar.col, lty=1)
args.errbar<-if(is.null(args.errbar)|!is.list(args.errbar))
args.errbar.temp
else if(is.list(args.errbar))
modifyList(args.errbar.temp, args.errbar)
errbars(errloc, cilo=lo.bar, cihi=hi.bar, nc=1, whisker=whisker,
args.errbar=args.errbar, half.errbar=half.errbar)
}
if(box) box()
if(percentage){
args.yaxis.temp<-list(at=seq(0,100, 20), las=1)
args.yaxis<-if(!is.list(args.yaxis)) args.yaxis.temp else modifyList(args.yaxis.temp, args.yaxis)
do.call(axis, c(side=2, args.yaxis))
}
}
bar(dv = "%",
factors = c(readabilityoutput$`Overall success %`, Rate),
dataframe = readabilityoutput,
errbar = FALSE,
ylim=c(0, 140))
bar(dv = "%",
factors = c(readabilityoutput$`Overall success %`, Rate),
dataframe = readabilityoutput,
errbar = FALSE,
ylim=c(0, 140))
library("lattice", lib.loc="D:/Program Files/R/R-3.3.1/library")
install.packages("lattice")
library("lattice", lib.loc="D:/Program Files/R/R-3.3.1/library")
install.packages("lattice")
library(lattice)
barplot(overallsuccessausten,overallsuccessdickens)
library(lattice)
savehistory(file = "1940.Rhistory")
save.image(file = "1940.RData")
load("E:/CIW JAAR 3 DIGITAL HUMANITIES/From Objects To Data/Data/1940.RData")
objects()
library(lsr)
library(effsize)
library(pwr)
library(lattice)
graphics::barplot.default(height=readabilityoutput)
overallsuccess
overallsuccessausten
overallsuccessdickens
mean(overallsuccessausten)
mean(overallsuccessdickens)
mean(numberofeditions_austen)
mean(numberofeditions_dickens)
numberofeditionsvector
readabilityoutput$`Number of editions %` <- as.numeric(readabilityoutput$`Number of editions %`)
readabilityoutput$`Number of editions %` -> numberofeditions_percentage
numberofeditions_percentage
readabilityoutput[1:6,17]
readabilityoutput[1:6,17] -> numberofeditions_percentage_austen
readabilityoutput[1:6,17] -> numberofeditions_percentage_dickens
readabilityoutput[7:21,17] -> numberofeditions_percentage_dickens
numberofeditions_percentage_austen
numberofeditions_percentage_dickens
mean(numberofeditions_percentage_austen)
mean(numberofeditions_percentage_dickens)
(mean)overallsuccessausten
mean(overallsuccessausten)
mean(overallsuccessdickens)
counts <- table(readabilityoutput$`Overall success %`, readabilityoutput$`Number of editions %`)
counts
counts <- table(overallsuccessausten, overallsuccessdickens)
mean(overallsuccessausten) -> mean_overallsuccessausten
mean(overallsuccessdickens) -> mean_overallsuccessdickens
counts <- table(mean_overallsuccessausten, mean_overallsuccessdickens)
counts
mean(numberofeditions_percentage_austen) -> mean_numberofeditions_percentage_austen
mean(numberofeditions_percentage_dickens) -> mean_numberofeditions_percentage_dickens
counts <- table(mean_numberofeditions_percentage_dickens, mean_numberofeditions_percentage_austen)
counts
barplot(counts, main="Means overall success % and number of editions %",
xlab="???", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
counts <- mean_numberofeditions_percentage_dickens, mean_numberofeditions_percentage_austen
install.packages(plotly)
library(plotly)
install.packages(plotly)
?ggplot2
install.packages("plotly")
library(plotly)
install.packages("stats")
install.packages("stats")
library(plotly)
Means <- c("Overall success means", "Number of editions means")
Austen <- c(53.54, 52.41)
Dickens <- c(29.64, 18.00)
data <- data.frame(Means, Austen, Dickens)
plot_ly(data, x = ~Means, y = ~Austen, type = 'bar', name = 'Austen') %>%
add_trace(y = ~Dickens, name = 'Dickens') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
plot_ly(data, x = ~Means, y = ~Austen, type = 'bar', name = 'Austen') %>%
add_trace(y = ~Dickens, name = 'Dickens') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group', las=2)
plot_ly(data, x = ~Means, y = ~Austen, type = 'bar', name = 'Austen', las=2) %>%
add_trace(y = ~Dickens, name = 'Dickens') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
plot_ly(data, x = ~Means, y = ~Austen, type = 'bar', name = 'Austen') %>%
add_trace(y = ~Dickens, name = 'Dickens') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
?deprecated
?hoverinfo
?plotly
savehistory(file = "1406.Rhistory")
